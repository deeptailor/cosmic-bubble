{"version":3,"sources":["webpack:///webpack/bootstrap 2f19a7531b1a02d4cf4b","webpack:///./lib/cosmic-bubble.js","webpack:///./lib/bubble.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,oBAAmB,OAAO;AAC1B;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;;AAEA;;AAEA,EAAC;;;;;;;ACzED;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2f19a7531b1a02d4cf4b\n **/","const Bubble = require('./bubble.js');\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById('myCanvas');\n  const ctx = canvas.getContext('2d');\n\n\n  var raf;\n  let array = [];\n\n  const hexDigits = \"0123456789ABCDEF\";\n\n  let num = 0;\n  let max = 30;\n  let min = 5;\n\n  while (num < 20) {\n\n    let color = \"#\";\n\n    for (let i = 0; i < 3; i ++) {\n      color += hexDigits[Math.floor((Math.random() * 16))];\n    }\n\n\n    let radius = (Math.random() * (max-min)) + min\n    let x = Math.floor(Math.random() * canvas.width);\n    let y = Math.floor(Math.random() * canvas.height);\n\n    let copy = new Bubble(x, y, radius, color, ctx);\n\n    array.push(copy);\n    num++;\n  }\n\n  const draw = () => {\n    ctx.clearRect(0,0, canvas.width, canvas.height);\n\n    array.forEach((bubble,idx1) => {\n\n      bubble.x += bubble.vx;\n      bubble.y += bubble.vy;\n\n      if (bubble.y + bubble.vy > canvas.height || bubble.y + bubble.vy < 0) {\n        bubble.vy = -bubble.vy;\n      }\n      if (bubble.x + bubble.vx > canvas.width || bubble.x + bubble.vx < 0) {\n        bubble.vx = -bubble.vx;\n      }\n\n      bubble.draw();\n\n      array.forEach((otherBubble,idx2) => {\n        let dx = (bubble.x + bubble.radius) - (otherBubble.x + otherBubble.radius);\n        let dy = (bubble.y + bubble.radius) - (otherBubble.y + otherBubble.radius);\n        let distance = Math.sqrt((dx * dx) + (dy * dy));\n\n        if (distance <= (bubble.radius + otherBubble.radius)){\n          bubble.vx = -bubble.vx;\n          otherBubble.vx = -otherBubble.vx;\n\n          // bubble.vy = -bubble.vy;\n          // otherBubble.vy = -otherBubble.vy;\n        }\n      });\n    });\n\n    raf = window.requestAnimationFrame(draw);\n  }\n\n  draw();\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/cosmic-bubble.js\n ** module id = 0\n ** module chunks = 0\n **/","class Bubble {\n  constructor(x,y,radius,color, ctx){\n\n    let plusOrMinus = Math.random() < 0.5 ? 1 : -1;\n\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.color = color;\n    this.vx = 0.5 * plusOrMinus;\n    this.vy = 0.5 * plusOrMinus;\n    this.ctx = ctx;\n  };\n\n  draw(){\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2, true);\n    this.ctx.closePath();\n    this.ctx.fillStyle = this.color;\n    this.ctx.shadowColor = this.color;\n    this.ctx.shadowBlur = this.radius-5;\n    this.ctx.fill();\n  };\n}\n\nmodule.exports = Bubble;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bubble.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}